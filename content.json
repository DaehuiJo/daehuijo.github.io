{"meta":{"title":"personal papers","subtitle":"Personal papers for Programing","description":"programing record","author":"jay","url":"http://daehuijo.github.io"},"pages":[],"posts":[{"title":"Cloud IDE","slug":"etc-20170419-Cloud-IDE","date":"2017-04-18T19:24:26.000Z","updated":"2017-04-18T21:43:40.677Z","comments":true,"path":"2017/04/19/etc-20170419-Cloud-IDE/","link":"","permalink":"http://daehuijo.github.io/2017/04/19/etc-20170419-Cloud-IDE/","excerpt":"","text":"[이미지 출처: https://blog.codenvy.com/] 클라우드 IDE는 기존 IDE의 불편함을 줄이기 위해 등장했다. 클라우드 IDE는 물리적인 컴퓨터에 종속되지 않는다. 웹브라우저를 실행하고 로그인만 하면 IDE를 이용할 수 있기 때문이다. 구글 독스를 이용하면 언제 어디서나 원하는 문서 작업을 할 수 있듯이, 클라우드 IDE로 인터넷에 연결된 컴퓨터만 있으면 어디서든 개발 작업을 이어 진행할 수 있다. -jihyun@bloter.net Cloud IDE Services Cloud9 CodeAnywhere Codenvy Koding SourceLair Eclipse Che Goorm [출처: https://www.slant.co/] 참고 What are the best cloud IDEs? Web(Cloud) IDE 비교","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"}],"tags":[{"name":"Cloud IDE","slug":"Cloud-IDE","permalink":"http://daehuijo.github.io/tags/Cloud-IDE/"}]},{"title":"markup and markdown","slug":"etc-20170416-markup-and-markdown","date":"2017-04-16T12:56:24.000Z","updated":"2017-04-18T21:45:50.504Z","comments":true,"path":"2017/04/16/etc-20170416-markup-and-markdown/","link":"","permalink":"http://daehuijo.github.io/2017/04/16/etc-20170416-markup-and-markdown/","excerpt":"","text":"Markup 마크업(Markup)은 태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한 가지이다. 태그는 원래 텍스트와는 별도로 원고의 교정부호와 주석을 표현하기 위한 것이였으나 용도가 점차 확장되어 문서의 구조를 표현하는 역할을 하게 되었다. - wikipedia Markdonw 존 그루버는 2004년에 문법 면에서 에런 스워츠와 중대한 협업을 통해 마크다운 언어를 만들었다. 마크다운(markdown)은 일반 텍스트 문서의 양식을 편집하는 문법이다. README 파일이나 온라인 문서, 혹은 일반 텍스트 편집기로 문서 양식을 편집할 때 쓰인다. 마크다운을 이용해 작성된 문서는 쉽게 HTML 등 다른 문서형태로 변환이 가능하다. - wikipedia 박세정님의 Markdown 소개 Slide Share 참고사이트 JOHN GRUBER Markdown Syntax https://nolboo.kim/blog/2013/09/07/john-gruber-markdown/ Kalkin7님의 워드프레스 마크다운 문법 설명 Nolboo님의 PHP 마크다운 확장 번역 ​ ​ ​ ​ https://github.com/biospin/BigBio/blob/master/reference/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4.md http://www.hakawati.co.kr/405 http://uosarch.appspot.com/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4#h_2cc02e22d67e7c3548e91a110987b51e https://simhyejin.github.io/2016/06/30/Markdown-syntax/ http://ccl.cckorea.org/syntax/","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"}],"tags":[{"name":"markup","slug":"markup","permalink":"http://daehuijo.github.io/tags/markup/"},{"name":"markdown","slug":"markdown","permalink":"http://daehuijo.github.io/tags/markdown/"}]},{"title":"bookmark page","slug":"etc-20170413-bookmark","date":"2017-04-12T23:15:10.000Z","updated":"2017-04-18T21:48:10.387Z","comments":true,"path":"2017/04/13/etc-20170413-bookmark/","link":"","permalink":"http://daehuijo.github.io/2017/04/13/etc-20170413-bookmark/","excerpt":"","text":"@category AWS / Cloud IDE / Database / JAVA / Spring / 웹표준 / 웹표준 W3SCHOOL.COM CSS, JQuery 공작소 Free Dhtml scripts, Jquery plugins ,Javascript, CSS, CSS3, Html5 Library 생활코딩 JavaScript Nolboo님의 자바스크립트 제대로 배우기 JAVA CORE 난 정말 JAVA를 공부한 적이 없다구요 / 오렌지 미디어 동영상 강의 JSP/SERVELET Spring 동영상 강좌 Seoul Wiz: Java&amp;JSP&amp;Spring /youtube Boaz Academy: Spring /youtube Java Brains: Spring Boot quick start /youtube tutorial 자바지기(박재성)님의 Spring-Boot, JPA로 질문/답변 게시판 구현 / JBee님의 실습페이지 흔한 개발자의 개발 노트: Spring 강력먼지제거님의 Spring 3 박용서님의 Spring 4 입문 &amp; 리눅스 서버 배포 오즈님의 Spring Framework 이성희님의 Spring Framework websystique.com: Spring 4 MVC Tutorial 밀키님의 Spring Boot web Project AWS Amazon Web Service Amazon EC2 Instance에 Java(JDK) 설치: FTP방식 AWS EC2 Java, Tomcat 설치 및 설정 FileZilla FTP 사용법 EC2에 FTP 접속 설정 아마존 웹서비스(AWS) EC2 접속 Putty Cloud_IDE Cloud9 구름IDE tutorialspoint Onlie Terminal &amp; IDE ###","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"}],"tags":[{"name":"bookmark","slug":"bookmark","permalink":"http://daehuijo.github.io/tags/bookmark/"}]},{"title":"spring projects","slug":"spring-20170413-spring-projects","date":"2017-04-12T22:48:12.000Z","updated":"2017-04-18T21:37:41.084Z","comments":true,"path":"2017/04/13/spring-20170413-spring-projects/","link":"","permalink":"http://daehuijo.github.io/2017/04/13/spring-20170413-spring-projects/","excerpt":"","text":"Spring project icons.zip [이미지 출처: https://spring.io/] Spring IO Platform스프링 IO는 현대적인 애플리케이션을 위해서 응집력 있고 버전관리가 된 기본적인 플랫폼안에 핵심(core) 스프링 API를 함께 제공한다. Spring Boot작은 스프링 구성과 함께 언제든지 실행할 수 있는 스프링 애플리케이션을 만들수 있게 도와준다. Spring Framework자바로 엔터프라이즈 애플리케이션을 만들 때 포괄적으로 사용할 수 있는 Programming 및 Configuration 모델을 제공해주는 프레임워크이다. http://codingcoding.tistory.com/29 https://gs.saro.me/#!m=elec&amp;jn=673","categories":[{"name":"Java","slug":"Java","permalink":"http://daehuijo.github.io/categories/Java/"},{"name":"Spring","slug":"Java/Spring","permalink":"http://daehuijo.github.io/categories/Java/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://daehuijo.github.io/tags/spring/"},{"name":"framework","slug":"framework","permalink":"http://daehuijo.github.io/tags/framework/"}]},{"title":"Ubuntu Init Setup","slug":"etc-ubuntu-20170413-Ubuntu-Init-Setting","date":"2017-04-12T18:07:36.000Z","updated":"2017-04-13T07:30:52.081Z","comments":true,"path":"2017/04/13/etc-ubuntu-20170413-Ubuntu-Init-Setting/","link":"","permalink":"http://daehuijo.github.io/2017/04/13/etc-ubuntu-20170413-Ubuntu-Init-Setting/","excerpt":"","text":"Ubuntu 16.04 LTS Initial Setup 군 전역 후 08년도에 구입했던 HP Compaq 6730s의 보조기억장치를 SSD로 교체하면서 운영체제를 우분투로 설치해봤다. 구입한지 10년이 되어가지만 Backlight를 한번 교체한 것 외에 고장이 없다. 경이로운 내구성이다. MS-DOS, Windows 3.0을 거쳐 MS사의 OS만을 사용해왔기 때문에 리눅스는 낯설다. 개발자로 전직한답시고 발발거리면서 Virture Machine 및 AWS EC2를 이용하여 사용해보았을 뿐이다. 단순 서버설정이 아닌 실질적인 사용을 위해 이것저것 설치 및 설정을 하면서 해야할 것이 너무 많다는 것을 느꼈고, 다른 이들도 자신만의 세팅방법을 작성해둔 것을 보고 나도 작성해두려 한다. 권한설정에 버벅거리면서 이클립스 런칭오류로 한번 포멧한건 안비밀. SSD Maximum http://davidlab.net/blog/how-to-tweak-ssd-in-ubuntu http://blog.iftm.xyz/ubuntu-16-04-1-lts-post-installation/ http://sergeswin.com/980 한글설정(zapary.blogspot.kr) chrome(https://brunch.co.kr/@hancoma/90) $ wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb $ sudo apt-get install libxssl libgconf2-4 libappindicator1 libindicator7 $ sudo dpkg -i google-chrome-stable_current_amd64.deb dropbox(https://www.linuxbabe.com/cloud-storage/install-dropbox-ubuntu-16-04) ​ Unity Tweek $ sudo apt-get install unity-tweak-tool theme https://www.ubuntufree.com/ubuntu-themes/ ​ http://www.noobslab.com/p/themes-icons.html http://ubuntunext.com/2016/06/15/top-10-themes-for-ubuntu-16-04 https://www.reddit.com/r/Ubuntu/comments/4k2kqi/favorite_unity_themes_1604/*plankhttp://programmingsummaries.tistory.com/359 1$ screenfetch ​ telegram https://www.linuxbabe.com/desktop-linux/2-ways-install-telegram-ubuntu-16-04-ppa-snap nautilus $ sudo apt install gksu $ sudo apt-get install nautilus $ sudo apt install nautilus nodejs &amp; npm sublimetext3 http://hochulshin.com/sublime-text3/ http://jos39.tistory.com/243 http://www.kvcodes.com/2016/11/install-update-sublime-text-3-ubuntu-using-terminal/ java jdk: http://blog.danggun.net/4101 eclipse git http://egloos.zum.com/seoz/v/3910833 https://help.github.com/articles/caching-your-github-password-in-git/ http://www.dreamy.pe.kr/zbxe/CodeClip/95408 terminator-ing http://programmingsummaries.tistory.com/361 vim http://sparklingstar.tistory.com/entry/5-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90-Vim-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%B8%ED%8C%85 http://terrorjang.tistory.com/69 https://medium.com/sunhyoups-story/vim-%EC%97%90%EB%94%94%ED%84%B0-%EC%9D%B4%EC%81%98%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-5b6b8d546017 http://sybd.tistory.com/100 http://akal.co.kr/?p=934 http://luckyyowu.tistory.com/308 typora http://support.typora.io/Typora-on-Linux/ sublimetext3 http://hochulshin.com/sublime-text3/ http://www.kvcodes.com/2016/11/install-update-sublime-text-3-ubuntu-using-terminal/ oralcle Qt todo• tomboy Notes• nemo• green recorder http://programmingsummaries.tistory.com/389 ###############################################http://blog.saltfactory.net/install-oracle-xe-on-ubuntu/http://sarc.io/index.php/oracledatabase/529-ubuntu-oracle-11gr2http://shinyul.tistory.com/9","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"},{"name":"ubuntu","slug":"etc/ubuntu","permalink":"http://daehuijo.github.io/categories/etc/ubuntu/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://daehuijo.github.io/tags/ubuntu/"},{"name":"os","slug":"os","permalink":"http://daehuijo.github.io/tags/os/"}]},{"title":"markdown posting","slug":"hexo-20170406-markdown-posting","date":"2017-04-05T19:16:10.000Z","updated":"2017-04-18T11:00:14.574Z","comments":true,"path":"2017/04/06/hexo-20170406-markdown-posting/","link":"","permalink":"http://daehuijo.github.io/2017/04/06/hexo-20170406-markdown-posting/","excerpt":"","text":"Markdown을 이용한 Hexo 블로그 포스팅[이미지 출처: Hexo Landscape theme default image] Hexo를 이용한 포스팅 방법은 3단계로 나눌 수 있다. 새로운 포스트를 생성한 다음 GFM: Github Flavored Markdown syntax를 이용하여 포스트 내용을 작성하고 github에 배포한다. Post 생성1$ hexo new &apos;post title&apos; Hexo에서 제공하는 markdown file생성 명령어는 $ hexo new [layout] &lt;title&gt;이지만 github에 배포하기 전까지는 로컬의 내용이 반영되지 않기 때문에 무의미 하다 생각되어 이외의 내용은 고려하지 않았다. 생성된 마크다운 파일은 /source/_posts에 위치한다. Post 작성생성된 파일을 열어보면 다음과 같다. 12345---title: firstPostdate: 2017-04-15 22:18:35tags:--- Front-matter 포스트 최상단에 ---로 구분해 놓은 부분은 Front-matter라 하며, YAML 또는 JSON을 이용한 포스트 환경설정 부분이다. Front-matter가 끝나는 부분은 YAML의 경우 세 개의 대시(-) 로, JSON의 경우 세 개의 세미콜론(;)을 넣어서 구분한다. 이 부분은 scaffolds폴더의 해당 파일(이곳에서는 post.md)의 수정을 통해 초기값을 변경할 수 있다. scaffolds Front-matter 설정 값 설정 설명 layout 레이아웃 title 타이틀(파일명) date 파일 생성일 update 파일 업로드일 comments 포스트에서 comment 기능을 사용할 지 여부 category 카테고리 tag 태그 permalink 포스트의 기본 permalink를 override categories &amp; tags 태그의 경우 계층의 구분이 없기때문에 작성순서가 중요하지 않으나, 카테고리는 작성한 순서에 따라 계층구조로 적용된다. 12345678910---title: firstPostdate: 2017-04-15 22:18:35categories: - Sports - Baseballtags: - Exercise - athlete --- 본문 작성 Front-matter 다음 라인(---)부터 컨텐츠 내용을 GFM에 맞춰서 작성하면 된다. biospin님의 마크다운.md markdown editor 다양한 IDE(Visual studio) 및 editor에서 markdown 작성을 지원해주고 있다. nolboo님의 sublime Text 활용 futurecreator님의 ATOM 활용 ONE™님의 Typora 활용 Post 배포포스트 작성이 완료된 후 github에 배포하기 전 로컬서버를 통해 포스트 내용을 확인해 볼 수 있으며, 포스트를 배포하기 위해서는 정적파일을 생성해야 한다. 1$ hexo generate 정적파일이 생성된 후 원격서버에 이를 배포한다. 배포명령어는 입력하면 _config.yml에 입력했었던 repository url에 push를 하기위한 github의 정보를 요구한다. 이를 입력해주면 배포가 완료되었다는 메시지가 나타난다. 1$ hexo deploy 포스트 내용의 업데이트가 완전히 이루어 지지 않았을 경우에는 $ hexo clean을 통해 database와 public folder를 삭제한 후 다시 정적파일 생성 및 배포를 하면 된다. 기타 환경설정여기까지가 포스팅을 위한 기본적인 내용이며, 추가적인 환경설정(github namecard 추가, 네이버 &amp; 구글 사이트 등록 및 구글 광고 추가 등)은 Eric Han님의 헥소관련 포스팅에 자세히 나와있다. Hexo posting 환경 유지 /public폴더에 생성된 정적파일만 원격저장소에 저장되기 때문에 해당 블로그에 대한 설정파일(generator)을 유지하기 위해서는 github의 다른 repository에 블로그 폴더 전체파일을 push하는 방법도 있으나, 나의 경우에는 Cloud storage(dropbox)에 동기화 시켜 사용하고 있다. nodejs, git, hexo package만 설치해준 뒤, 블로그폴더 동기화를 거치면 포스팅 환경이 다시 만들어 진다. 참고사이트 Github Mastering Markdown Github Writing GitHub Flavored Markdown Spec Ciro Santilli’s markdown style guide hakawati님의 markdown과 친해지기 서울시립대 건축학부: markdown","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"},{"name":"blog","slug":"etc/blog","permalink":"http://daehuijo.github.io/categories/etc/blog/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://daehuijo.github.io/tags/markdown/"},{"name":"hexo","slug":"hexo","permalink":"http://daehuijo.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"http://daehuijo.github.io/tags/blog/"}]},{"title":"AWS ubuntu GUI","slug":"etc-aws-20170406-AWS-ubuntu-GUI","date":"2017-04-05T19:07:08.000Z","updated":"2017-04-12T22:18:20.263Z","comments":true,"path":"2017/04/06/etc-aws-20170406-AWS-ubuntu-GUI/","link":"","permalink":"http://daehuijo.github.io/2017/04/06/etc-aws-20170406-AWS-ubuntu-GUI/","excerpt":"","text":"Amazon Web Services EC2 Linux(ubuntu) GUI set up AWS를 이용하여 이것저것 해보면서 CLI환경이 익숙치 않아 버벅거리다, 구글링을 통해 알게된 GUI 설정방법을 기록해 두고자 한다. 1.access aws ec2 ssh -i “C:\\root\\dev\\AWS\\Key\\ubuntudesktop.pem“ ubuntu@ec2-13-124-20-68.ap-northeast- 2.compute.amazonaws.com sudo apt-get update sudo apt-get install ubuntu-desktop vnc4server gnome-panel gnome-settings-daemon nautilus gnome-terminal vncserver (setting pw) vncserver -kill :1 cd .vnc -&gt; sudo vim xstatup 12345678910111213141516#!/bin/shexport XKL_XMODMAP_DISABLE=1unset SESSION_MANAGERunset DBUS_SESSION_BUS_ADDRESS[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresourcesxsetroot -solid greyvncconfig -iconic &amp;gnome-panel &amp;gnome-settings-daemon &amp;metacity &amp;nautilus &amp;gnome-terminal &amp; eixt reconnect ssh -L 5901:localhost:5901 -i “C:\\root\\dev\\AWS\\Key\\ubuntudesktop.pem“ ubuntu@ec2-13-124-20-68.ap-northeast-2.compute.amazonaws.com vncserver -kill :1 vncserver -geometry 1280x800 vnc-viwer =&gt; localhost:5901 ———————————————–nodejs framework root 권한으로 express 실행 nojs automatic 24Hr hosting $ nohup npm start &amp;==&gt; process id 11963 $ ps -ef==&gt; current processing list $ kill [process Id]==&gt; webserver sutdown ############################################port rediection: 80번 port를 설정한 port로 자동 redirection하는 방법$ sudo iptables -A PREROUTING -t nat -i eth0 -p tcp –dport 80 -j REDIRECT –to-port 9000","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"},{"name":"aws","slug":"etc/aws","permalink":"http://daehuijo.github.io/categories/etc/aws/"}],"tags":[{"name":"aws","slug":"aws","permalink":"http://daehuijo.github.io/tags/aws/"},{"name":"VNCviewr","slug":"VNCviewr","permalink":"http://daehuijo.github.io/tags/VNCviewr/"}]},{"title":"Spring 개발환경 설정","slug":"spring-20170403-Spring-개발환경-설정","date":"2017-04-03T14:06:16.000Z","updated":"2017-04-17T20:54:40.541Z","comments":true,"path":"2017/04/03/spring-20170403-Spring-개발환경-설정/","link":"","permalink":"http://daehuijo.github.io/2017/04/03/spring-20170403-Spring-개발환경-설정/","excerpt":"","text":"[이미지 출처: https://spring.io/] 실습환경 OS: Ubuntu 16.04.2 LTS JDK: 1.8.0_121 IDE: Eclipse_Neon.3 Release (4.6.3) Spring IDE 설치1) Eclipse [Menu] -&gt; [Help] -&gt; [Install New Software] 2) [Work with]란에http://dist.springsource.com/release/TOOLS/update/e4.6/ 입력 3) 설치할 software를 선택 후 [Next] 4) License 내용 [accept] 선택 후 [Finish] STS Plugin 설치1) Eclipse [Menu] -&gt; [Marketplace] 2) STS 검색 후 Install 또는, 공식 웹사이트 marketplace에서 install tab을 Eclipse로 Drag 하여 설치 Spring Tool Suite IDE 설치[STS 공식 다운로드 웹페이지 STS Tutorial Codejava.net - Spring MVC with STS Spring Tutorial journaldev.com - Spring core tutorial mkyong.com - Spring MVC tutorial","categories":[{"name":"Java","slug":"Java","permalink":"http://daehuijo.github.io/categories/Java/"},{"name":"Spring","slug":"Java/Spring","permalink":"http://daehuijo.github.io/categories/Java/Spring/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://daehuijo.github.io/tags/spring/"},{"name":"framework","slug":"framework","permalink":"http://daehuijo.github.io/tags/framework/"}]},{"title":"Hexo blog","slug":"hexo-20170403-Hexo-blog","date":"2017-04-03T13:39:41.000Z","updated":"2017-04-18T11:04:38.743Z","comments":true,"path":"2017/04/03/hexo-20170403-Hexo-blog/","link":"","permalink":"http://daehuijo.github.io/2017/04/03/hexo-20170403-Hexo-blog/","excerpt":"","text":"Hexo와 Github Page를 이용한 블로그 개설[이미지 출처: http://masatolan.com/images/2015/programming/1/hexo-blog-basic1.jpg] 블로그 개설을 결심하고 블로그 제공 서비스들(Naver, Tistory, Blogger, Medium)을 기웃거리면서 구글링 중 github page를 이용한 블로그에 대해 알게 되었다. Jekyll(Ruby 기반), Hugo(Go 기반), Hexo(Node.js 기반)와 같은 Static Website Generator를 이용하여 생성한 블로그를 github에 push하면 블로그 사이트가 만들어 진다. 다양한 서비스들이 있지만 그나마 알고 있는 nodejs기반 Hexo를 이용하기로 했다. 설치 software OS Windows 10 CLI Git Bash Editor Atom, Typora 1) 필요환경 Node.js Git 2) 헥소설치 Node.js와 Git을 설치한 후 터미널에서 아래 명령어를 입력하면 Hexo가 설치된다. 1$ npm install -g hexo-cli 3) 헥소 웹사이트 생성 헥소 설치가 완료된 후, hexo init 명령어를 이용하여 블로그 폴더를 생성한다. 1$ hexo init 폴더명 Start blogging with Hexo!라는 메시지와 함께 생성이 완료된다. 4) Node Package Manager 설치 터미널에서 블로그 폴더까지 이동하여 노드 패키지 매니저인 npm을 설치한다. 12$ cd 폴더명$ npm install 터미널에서 다음의 명령어로 로컬서버를 돌려, 설치가 잘 되었는지 확인한다. 1$ hexo server http://localhost:4000/로컬서버 4000번 포트에서 헥소가 동작하고 있다는 메시지가 나타난다. 해당주소를 확인해보면 다음과 같이 나타난다. 4) 테마 설치 4.1) 헥소 테마를 직접 만드는 경우 Hexo 공식 웹사이트 가이드 Jonathan Klughertz’s Create Hexo Theme Part 1, Part 2, Part 3 4.2) 만들어진 테마를 적용할 경우 Hexo 공식 웹사이트 테마페이지 헥소 공식사이트에 방문하여 적당한 테마를 선택한다. 해당 테마를 제공하는 사용자의 repository를 방문하면 설치방법이 설명되어 있다. 터미널을 열고 헥소 블로그 최상위 폴더에서 다음과 같이 입력하여 테마를 다운받는다. 1$ git clone repository주소 themes/테마명 마찬가지로, 최상위 폴더의 _config.yml의 theme 부문을 해당 테마명으로 수정한다. 1theme: 테마명 테마 업그레이드는 선택사항으로 theme/테마명폴더로 이동하여 git pull을 입력한다. 12$ cd theme/테마명$ git pull Github 연동1) github repository 생성 github page 기능을 이용하기 위해 new repository를 생성하는데 Repository name을 username.github.io로 지정해야 블로그 url을 https://username.github.io/로 지정할 수 있다. 2) hexo 설정 및 github 연동 블로그 파일을 github에 push하기 위해서 몇가지 설정을 해주어야 한다. 블로그 메인폴더에 위치한 헥소 설정파일인 _config.yml파일의 내용을 수정한다. 1234567891011# URLurl: http://daehuijo.github.io/ #생성한 repository url#root: /permalink: :year/:month/:day/:title/permalink_defaults:# Deploymentdeploy: type: git repo: https://github.com/DaehuiJo/daehuijo.github.io.git #github에 배포하기 위한 url# branch: master 3) hexo-deployer-git 플러그인 설치 로컬에 있는 마크다운 파일(.md)을 github에 배포하기 위해서는 정적파일(.html)을 생성하여 배포하여 하는데, github에 배포하기 위해서는 node package 중 hexo-deployer-git를 설치해 주어야 한다. 1$ npm install --save hexo-deployer-git 4) github에 배포 12$ hexo generate 또는 hexo g #정적 파일 생성#$ hexo deploy 또는 hexo d #github 배포# $ hexo g --d명령으로 한번에 처리할 수 도 있다. https://username.github.io/에 접속하여 github에 push가 잘 되었나 확인한다. 참고사이트 헥소 공식 페이지 Jonathan Klughertz’s Hexo article Eric Han님의 헥소관련 포스트 Willem Meints’s Get started with Hexo on Github hyunseob님의 헥소 시작하기","categories":[{"name":"etc","slug":"etc","permalink":"http://daehuijo.github.io/categories/etc/"},{"name":"blog","slug":"etc/blog","permalink":"http://daehuijo.github.io/categories/etc/blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://daehuijo.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"http://daehuijo.github.io/tags/blog/"}]}]}